<?xml version="1.0"?>
<facelet-taglib version="2.0"
                xmlns="http://java.sun.com/xml/ns/javaee"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-facelettaglibrary_2_0.xsd">

<namespace>http://github.com/blutorange</namespace>

    <tag>
        <description>
            <![CDATA[NOTICE: ]]>
        </description>
        <tag-name>monacoEditor</tag-name>
        <component>
            <component-type>com.github.blutorange.primefaces.component.MonacoEditor</component-type>
            <renderer-type>com.github.blutorange.primefaces.component.MonacoEditorRenderer</renderer-type>
        </component>
        <attribute>
            <description>
                <![CDATA[Unique identifier of the component in a naming container.]]>
            </description>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]>
            </description>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[An EL expression referring to a server side UIComponent instance in a backing bean.]]>
            </description>
            <name>binding</name>
            <required>false</required>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Name of the client side widget.]]>
            </description>
            <name>widgetVar</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Value of the component.]]>
            </description>
            <name>value</name>
            <required>false</required>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Defines if the editor is readonly.]]>
            </description>
            <name>readonly</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Defines if the editor is disabled.]]>
            </description>
            <name>disabled</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[The tab index to assign to the editor. If not given, no tab index will be assigned.]]>
            </description>
            <name>tabindex</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[An EL expression or a literal text that defines a converter for the component. When it's an EL expression, it's resolved to a converter instance. In case it's a static text, it must refer to a converter id.]]>
            </description>
            <name>converter</name>
            <required>false</required>
            <type>javax.faces.convert.Converter</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Marks component as required.]]>
            </description>
            <name>required</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Message to display when required field validation fails.]]>
            </description>
            <name>requiredMessage</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Message to display when conversion fails.]]>
            </description>
            <name>converterMessage</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Message to display when validation fails.]]>
            </description>
            <name>validatorMessage</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[A method expression referring to a method validationg the input.]]>
            </description>
            <name>validator</name>
            <required>false</required>
            <type>javax.faces.validator.Validator</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback when the editor area receives focus.]]>
            </description>
            <name>onFocus</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback when the editor area loses focus.]]>
            </description>
            <name>onBlur</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback when the editor content changes.]]>
            </description>
            <name>onChange</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback when text was pasted into the editor.]]>
            </description>
            <name>onPaste</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback when a mousedown event was triggered on the editor area.]]>
            </description>
            <name>onMousedown</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback when a mousemove event was triggered on the editor area.]]>
            </description>
            <name>onMousemove</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback when a mouseup event was triggered on the editor area.]]>
            </description>
            <name>onMouseup</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback when a keyup event was triggered on the editor area.]]>
            </description>
            <name>onKeyup</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback when a keydown event was triggered on the editor area.]]>
            </description>
            <name>onKeydown</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback when a keypress (onDidType) event was triggered on the editor area.]]>
            </description>
            <name>onKeypress</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Language for the monaco editor, eg. typescript, javascript, css, or html.]]>
            </description>
            <name>codeLanguage</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Interface for the user interface. Built-in languages are "bg", "de", "en", "es", "fr", "hu", "it", "ja", "ko", "ps", "pt-br", "ru", "tr", "uk", "zh-hans", and "zh-hant".
                To use a different language, also specify the language file to be used via the option uiLanguageUri.]]>
            </description>
            <name>uiLanguage</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[For custom language files. If given, this is used instead of the built-in language files. It is prefixed with the
                appropriate base URL (eg. http://.../java.faces.resources/). You need to append ".xhtml" yourself. If the resource is inside
                a resource library, specify the URL parameter "ln", eg. "my-lang.js.xhtml?ln=mylib". See the built-in files for the format
                (/META-INF/resources/primefaces-blutorange/monacoEditor/locale/).]]>
            </description>
            <name>uiLanguageUri</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[An expression that evaluates to an extender object. Either an expression that evaluates to an extender object, or a resource with JavaScript that evaluates to
                an extender object. First, attempt to evaluate the given string as a JavaScript expression. If this results in an object, use this as the extender object.
                Otherwise, prefix the given string with the appropriate base URL (eg. http://.../java.faces.resources/), and attempt to load that resource. If the resource loads
                successfully, evaluate the resource as a JavaScript expression and use that value as the extender object. Note that you must add the .xhtml prefix yourself,
                eg. "extender.js.xhtml". In case the resource is located in a library, use the URL paramter "ln", eg. "extender.js.xhtml?ln=mylib".]]>
            </description>
            <name>extender</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Theme of the editor. Built-in themese are "vs", "vs-dark", and "hc-black". You can create custom themes via monaco.editor.defineTheme.
                Do this as part of extender.beforeCreate.]]>
            </description>
            <name>theme</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Width of the editor CSS units, set as an inline style. Set to the empty string in case you want to size the editor via CSS.]]>
            </description>
            <name>width</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Height of the editor CSS units, set as an inline style. Set to the empty string in case you want to size the editor via CSS.]]>
            </description>
            <name>height</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[How line numbers are displayed. Can be one of "on", "off", "relative", or "interval". ]]>
            </description>
            <name>height</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>
</facelet-taglib>